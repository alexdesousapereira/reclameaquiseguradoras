info_reclamacoes_avaliadas <- read.csv('dados/DadosReclameAqui.csv',sep=',', encoding = 'UTF-8',, stringsAsFactors = FALSE)
library(tm)
install.packages("pacman")
pacman::p_load(tm)
library(wordcloud2)
pacman::p_load(tm)
pacman::p_load(wordcloud2)
pacman::p_load(tidytext)
pacman::p_load(tm)
pacman::p_load(wordcloud2)
pacman::p_load(tidytext)
library(tm)
pacman::p_load(tm)
pacman::p_load(wordcloud2)
pacman::p_load(tidytext)
install.packages("slam")
library(tm)
library(tm)
library(tm)
install.packages('devtools')
library(devtools)
library(pacman)
pacman::p_load(wordcloud2) # mineração de texto
pacman::p_load(tidytext) # mineração de texto
pacman::p_load(tm) # mineração de texto
pacman::p_load(tidyverse)  # tratamento de dados
pacman::p_load(dplyr) # tratamento de dados
pacman::p_load(plyr) # tratamento de dados
pacman::p_load(magrittr) # tratamento de dados
pacman::p_load(widyr)
pacman::p_load(igraph)
pacman::p_load(ggraph)
pacman::p_load(wordcloud2) # mineração de texto
pacman::p_load(tidytext) # mineração de texto
pacman::p_load(tm) # mineração de texto
pacman::p_load(tidyverse)  # tratamento de dados
pacman::p_load(dplyr) # tratamento de dados
pacman::p_load(plyr) # tratamento de dados
pacman::p_load(magrittr) # tratamento de dados
pacman::p_load(widyr)
pacman::p_load(igraph)
pacman::p_load(ggraph)
pacman::p_load(wordcloud2) # mineração de texto
pacman::p_load(tidytext) # mineração de texto
pacman::p_load(tm) # mineração de texto
pacman::p_load(tidyverse)  # tratamento de dados
pacman::p_load(dplyr) # tratamento de dados
pacman::p_load(plyr) # tratamento de dados
pacman::p_load(magrittr) # tratamento de dados
pacman::p_load(widyr)
pacman::p_load(igraph)
pacman::p_load(ggraph)
str(info_reclamacoes_avaliadas)
head(info_reclamacoes_avaliadas)
info_reclamacoes_avaliadas$titulo<-
gsub('Editado pelo Reclame Aqui','editado_RA',info_reclamacoes_avaliadas$titulo)
avaliadas_token<-info_reclamacoes_avaliadas %>%
select(titulo,row_hash) %>%
unnest_tokens(word,titulo)
stop_words_pt<-data.frame(word=(stopwords(kind = "pt")))
avaliadas_token <- avaliadas_token %>%
anti_join(stop_words_pt)
#juntar o status da reclamação no conjunto de dados com as palavras
avaliadas_token <-join(avaliadas_token,
info_reclamacoes_avaliadas[,c("row_hash","sentimento")])
avaliadas_token %<>%
filter(sapply(avaliadas_token$word,nchar)>2)
#juntar o status da reclamação no conjunto de dados com as palavras
avaliadas_token <-join(avaliadas_token,
info_reclamacoes_avaliadas[,c("row_hash","sentimento")])
info_reclamacoes_avaliadas$titulo<-
gsub('Editado pelo Reclame Aqui','editado_RA',info_reclamacoes_avaliadas$titulo)
avaliadas_token<-info_reclamacoes_avaliadas %>%
select(titulo,row_hash) %>%
unnest_tokens(word,titulo)
avaliadas_token<-info_reclamacoes_avaliadas %>%
select(titulo,row_hash) %>%
unnest_tokens(word,titulo)
stop_words_pt<-data.frame(word=(stopwords(kind = "pt")))
avaliadas_token <- avaliadas_token %>%
anti_join(stop_words_pt)
avaliadas_token %<>%
filter(sapply(avaliadas_token$word,nchar)>2)
#juntar o status da reclamação no conjunto de dados com as palavras
avaliadas_token <-join(avaliadas_token,
info_reclamacoes_avaliadas[,c("row_hash","sentimento")])
View(info_reclamacoes_avaliadas)
info_reclamacoes_avaliadas <- read.csv('dados/DadosReclameAqui.csv',sep=',', encoding = 'UTF-8', stringsAsFactors = FALSE)
info_reclamacoes_avaliadas <- read.csv('dados/DadosReclameAqui.csv',sep=',', encoding = 'UTF-8', stringsAsFactors = FALSE)
View(info_reclamacoes_avaliadas)
str(info_reclamacoes_avaliadas)
head(info_reclamacoes_avaliadas)
info_reclamacoes_avaliadas$titulo<-
gsub('Editado pelo Reclame Aqui','editado_RA',info_reclamacoes_avaliadas$titulo)
avaliadas_token<-info_reclamacoes_avaliadas %>%
select(titulo,row_hash) %>%
unnest_tokens(word,titulo)
stop_words_pt<-data.frame(word=(stopwords(kind = "pt")))
avaliadas_token <- avaliadas_token %>%
anti_join(stop_words_pt)
stop_words_pt<-data.frame(word=(stopwords(kind = "pt")))
avaliadas_token <- avaliadas_token %>%
anti_join(stop_words_pt)
avaliadas_token %<>%
filter(sapply(avaliadas_token$word,nchar)>2)
#juntar o status da reclamação no conjunto de dados com as palavras
avaliadas_token <-join(avaliadas_token,
info_reclamacoes_avaliadas[,c("row_hash","sentimento")])
analise_palavras<-avaliadas_token %>%
group_by(word) %>%
dplyr::mutate(percentual_solucao = sum(sentimento=="positivo")/dplyr::n(),
qnt_palavra = dplyr::n()) %>%
select(word,percentual_solucao,qnt_palavra) %>%
unique()%>%
ungroup()
#filtrar apenas os resultados com frequencia maior que 15
analise_palavras %<>% filter(qnt_palavra >15)
avaliadas_token_empresa <- join(avaliadas_token,
info_reclamacoes_avaliadas[,c("row_hash","empresa")])
analise_empresas <-avaliadas_token_empresa %>%
group_by(empresa) %>%
dplyr::mutate(percentual_solucao = sum(sentimento=="negativo")/n()) %>%
select(percentual_solucao,empresa) %>%
unique() %>%
ungroup()
analise_palavras_empresas <-avaliadas_token_empresa %>%
group_by(word,empresa) %>%
dplyr::mutate(percentual_solucao = sum(sentimento=="positivo")/n(),
qnt_palavra = n()) %>%
select(word,percentual_solucao,qnt_palavra,empresa) %>%
unique()%>%
ungroup()
analise_palavras_empresas %<>% filter(qnt_palavra >10)
library(widyr)
library(igraph)
library(ggraph)
install.packages("ggraph")
install.packages("ggforce")
library(widyr)
library(igraph)
library(ggraph)
library(ggraph)
install.packages(ggraph)
install.packages("ggraph")
install.packages("ggraph")
library(widyr)
library(igraph)
library(ggraph)
install.packages("ggraph")
library(widyr)
library(igraph)
library(ggraph)
install.packages(c("cli", "evaluate", "rlang", "tokenizers", "xfun"))
install.packages(c("cli", "evaluate", "rlang", "tokenizers", "xfun"))
install.packages(c("cli", "evaluate", "rlang", "tokenizers", "xfun"))
install.packages(c("cli", "evaluate", "rlang", "tokenizers", "xfun"))
install.packages(c("cli", "evaluate", "rlang", "tokenizers", "xfun"))
